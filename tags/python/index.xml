<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python on LiuHe&#39;s blog</title>
    <link>https://okery.github.io/tags/python/</link>
    <description>Recent content in python on LiuHe&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 25 Oct 2019 19:23:58 +0800</lastBuildDate>
    
	<atom:link href="https://okery.github.io/tags/python/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>python常用转义字符</title>
      <link>https://okery.github.io/post/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E5%B8%B8%E7%94%A8%E8%BD%AC%E4%B9%89%E5%AD%97%E7%AC%A6/</link>
      <pubDate>Fri, 25 Oct 2019 19:23:58 +0800</pubDate>
      
      <guid>https://okery.github.io/post/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E5%B8%B8%E7%94%A8%E8%BD%AC%E4%B9%89%E5%AD%97%E7%AC%A6/</guid>
      <description>   转义字符 描述     \&amp;lsquo; 单引号   \&amp;ldquo; 双引号   \ 反斜杠   \b 退格   \000 空额   \n 换行   \v 纵向制表符   \t 横向制表符   \r 回车   \f 换行    </description>
    </item>
    
    <item>
      <title>python学习笔记-map、zip函数</title>
      <link>https://okery.github.io/post/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-mapzip%E5%87%BD%E6%95%B0/</link>
      <pubDate>Mon, 30 Sep 2019 19:23:58 +0800</pubDate>
      
      <guid>https://okery.github.io/post/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-mapzip%E5%87%BD%E6%95%B0/</guid>
      <description>map函数 map函数会根据提供的函数对指定序列做映射， 第一个参数function一参数序列中的每一个元素调用function函数，返回包含每次function函数返回值的新列表 将数组中int类型变量转换成str类型
a = [1, 2, 3] print(list(map(str, a)))  输出为：
[&#39;1&#39;, &#39;2&#39;, &#39;3&#39;]  也可以对数组进行算数操作, 对a中每个元素进行加法操作
a = [ [1, 2, 3], [4, 5, 6] ] print(list(map(sum, a)))  输出
[6, 15]  使用lambda表达式
a = [1, 2, 3, 4, 5] print(list(map(lambda x: x**2, a)))  输出
[1, 4, 9, 16, 25]  zip函数 zip函数用于将可迭代的对象作为参数，将对象照片对应的元素打包成一个个元组，然后返回由这些元组组成的列表 若各个迭代器的元素个数不一致，则返回列表长度与最短的对象响应， 利用*操作符，可以将元组解压为列表 在python3.x中，为了减少内存，zip函数返回的是一个对象。如需展示列表，需要手动list()进行转换 将对应位置打包成元组的列表
a = [1, 2, 3] b = [4, 5, 6] print(list(zip(a, b)))  输出</description>
    </item>
    
    <item>
      <title>python学习笔记-小数取整</title>
      <link>https://okery.github.io/post/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E5%B0%8F%E6%95%B0%E5%8F%96%E6%95%B4/</link>
      <pubDate>Mon, 30 Sep 2019 19:23:58 +0800</pubDate>
      
      <guid>https://okery.github.io/post/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E5%B0%8F%E6%95%B0%E5%8F%96%E6%95%B4/</guid>
      <description>取整函数 向下取整 直接使用内置的int()
四舍五入 对数字进行四舍五入使用round()
向上取整 使用math模块中的ceil()方法
分别取整数部分和小数部分 使用math模块中的modf()方法，该方法返回一个包含小数部分和整数部分的元组</description>
    </item>
    
    <item>
      <title>python学习笔记-浅拷贝、深拷贝</title>
      <link>https://okery.github.io/post/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E6%B5%85%E6%8B%B7%E8%B4%9D%E6%B7%B1%E6%8B%B7%E8%B4%9D/</link>
      <pubDate>Sat, 21 Sep 2019 19:23:58 +0800</pubDate>
      
      <guid>https://okery.github.io/post/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E6%B5%85%E6%8B%B7%E8%B4%9D%E6%B7%B1%E6%8B%B7%E8%B4%9D/</guid>
      <description>前述 python中的浅拷贝、深拷贝和Java里面的概念是一样的，浅拷贝就是对引用的拷贝，深拷贝就是对对象的资源的赋值是将一个对象的地址赋值给一个变量，让变量指向该地址
修改不可变对象需要开辟新空间
修改可变对象不需要开辟新空间
浅拷贝 浅拷贝仅仅是赋值元素的地址</description>
    </item>
    
    <item>
      <title>python学习笔记-list列表</title>
      <link>https://okery.github.io/post/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-list%E5%88%97%E8%A1%A8/</link>
      <pubDate>Fri, 20 Sep 2019 19:23:58 +0800</pubDate>
      
      <guid>https://okery.github.io/post/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-list%E5%88%97%E8%A1%A8/</guid>
      <description>list列表 list是有序集合，没有固定大小，根据数据量的不同可以动态变化，索引从0开始
访问元素 使用索引访问元素
classmates = [&#39;lisi&#39;, &#39;zhangsan&#39;] # 取 lisi， 索引为0 print(classmates[0])  若要取最后元素，可以使用-1做索引, 依次类推，可以用-2取倒数第二个元素, &amp;hellip;&amp;hellip;
classmates = [&#39;lisi&#39;, &#39;zhangsan&#39;] # 取 zhangsan，索引使用-1 print(classmates[-1])  index(), 返回列表中第一个值为x的元素的索引，若没有，则返回一个错误
classmates = [&#39;lisi&#39;, &#39;zhangsan&#39;] lisi_index = classmates.index(&#39;lisi&#39;) print(lisi_index)  统计列表中元素x出现的次数
classmates = [&#39;lisi&#39;, &#39;zhangsan&#39;] lisi_count = classmates.count(&#39;lis&#39;) print(lisi_count)  遍历列表 方法1
classmates = [&#39;lisi&#39;, &#39;zhangsan&#39;] for i in classmates: print(&amp;quot;索引：%s 值：%s&amp;quot; % (classmates.index(i), i))  方法2
classmates = [&#39;lisi&#39;, &#39;zhangsan&#39;] for i in range(len(classmates)): print(&#39;索引：%s 值：%s&#39; % (i, classmates[i]))  方法3</description>
    </item>
    
  </channel>
</rss>